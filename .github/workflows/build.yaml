name: Application Workflows
run-name: SDLC for Application Workflows üöÄ
on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - run: echo "Triggered by ${{ github.actor }} with ${{ github.event_name }} event, status is ${{ job.status }}."
      - name: Install dependencies
        run: |
          echo "Installing dependencies..."
          yarn install
        continue-on-error: false
      - name: Check build status
        run: |
          if [ $? -ne 0 ]; then
            echo "Build step failed!" && exit 1
          else
            echo "Build completed successfully!"
          fi

  sast:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run Static Analysis
        run: |
          echo "Running Static Application Security Testing (SAST)..."
          # Simula la ejecuci√≥n de SAST, reemplaza con tu comando real
          echo "SAST completed successfully!"
        continue-on-error: false
      - name: Check SAST result
        run: |
          if [ $? -ne 0 ]; then
            echo "SAST step failed!" && exit 1
          else
            echo "SAST completed successfully!"
          fi

  provision-infra:
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo "‚öôÔ∏è Provisioning testing infrastructure for Application Workflows."
        continue-on-error: false
      - name: Check infrastructure provisioning
        run: |
          if [ $? -ne 0 ]; then
            echo "Infrastructure provisioning failed!" && exit 1
          else
            echo "Infrastructure provisioning completed!"
          fi

  dockerise:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          echo "Building Docker image..."
          docker build -t application-workflows:latest .
          docker tag application-workflows:latest ${{ secrets.DOCKER_USERNAME }}/application-workflows:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/application-workflows:latest
        continue-on-error: false
      - name: Check Docker build result
        run: |
          if [ $? -ne 0 ]; then
            echo "Docker build failed!" && exit 1
          else
            echo "Docker image pushed successfully!"
          fi

  end-2-end:
    runs-on: ubuntu-latest
    needs:
      - dockerise
      - provision-infra
    steps:
      - run: echo "‚öôÔ∏è Running E2E tests"
        continue-on-error: false
      - name: Check E2E result
        run: |
          if [ $? -ne 0 ]; then
            echo "E2E tests failed!" && exit 1
          else
            echo "E2E tests passed!"
          fi

  promote:
    needs: end-2-end
    runs-on: ubuntu-latest
    steps:
      - run: |
          curl -L \
            -X POST \
            -H "Authorization: Bearer ${{ github.token }}"\ 
            -H "Accept: application/vnd.github+json" \
            https://api.github.com/repos/${{ github.repository }}/actions/workflows/promote.yaml/dispatches \
            -d '{"ref":"main","inputs":{"path":"/service-one","image-name":"service-one"}}'
        continue-on-error: false
      - name: Check promotion status
        run: |
          if [ $? -ne 0 ]; then
            echo "Promotion step failed!" && exit 1
          else
            echo "Promotion completed successfully!"
          fi

  destroy-infra:
    needs: end-2-end
    runs-on: ubuntu-latest
    steps:
      - run: echo "‚öôÔ∏è Destroying testing infrastructure for Application Workflows."
        continue-on-error: false
      - name: Check infrastructure destruction
        run: |
          if [ $? -ne 0 ]; then
            echo "Failed to destroy infrastructure!" && exit 1
          else
            echo "Infrastructure destroyed successfully!"
          fi

  trigger-dependencies:
    needs: promote
    runs-on: ubuntu-latest
    steps:
      - run: |
          curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.PAT }}" \
            https://api.github.com/repos/outofdevops/application-two/actions/workflows/build.yaml/dispatches \
            -d '{"ref":"main","inputs":{"image-name":"service-one"}}'
        continue-on-error: false
      - name: Check trigger result
        run: |
          if [ $? -ne 0 ]; then
            echo "Trigger dependencies step failed!" && exit 1
          else
            echo "Trigger dependencies executed successfully!"
          fi
