name: Application One
run-name: SDLC for Application One üöÄ
on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - run: echo "Triggered by ${{ github.actor }} with ${{ github.event_name }} event, status is ${{ job.status }}."

  sast:
    needs: build
    uses: outofdevops/shared-workflows/.github/workflows/sast.yaml@main
    with:
      run-name: "Static Application Security Testing for Application-One"

  provision-infra:
    runs-on: ubuntu-latest
    steps:
      - run: echo "‚öôÔ∏è Provisioning testing infrastructure for Application One."
      - run: echo "Notifying monitoring system..."
        env:
          MONITORING_API_URL: ${{ secrets.MONITORING_API_URL }}
          MONITORING_API_KEY: ${{ secrets.MONITORING_API_KEY }}
        run: |
          curl -X POST $MONITORING_API_URL \
            -H "Authorization: Bearer $MONITORING_API_KEY" \
            -H "Content-Type: application/json" \
            -d '{
              "status": "in-progress",
              "job": "provision-infra",
              "message": "Provisioning infrastructure for testing"
            }'

  dockerise:
    needs: build
    uses: outofdevops/application-one/.github/workflows/dockerise.yaml@main
    with:
      image: "application-one"

  end-2-end:
    runs-on: ubuntu-latest
    needs:
      - dockerise
      - provision-infra
    steps:
      - run: echo "‚öôÔ∏è Running E2E tests"
      - run: echo "Notifying monitoring system..."
        env:
          MONITORING_API_URL: ${{ secrets.MONITORING_API_URL }}
          MONITORING_API_KEY: ${{ secrets.MONITORING_API_KEY }}
        run: |
          curl -X POST $MONITORING_API_URL \
            -H "Authorization: Bearer $MONITORING_API_KEY" \
            -H "Content-Type: application/json" \
            -d '{
              "status": "in-progress",
              "job": "end-2-end",
              "message": "End-to-end testing in progress"
            }'

  promote:
    needs:
      - end-2-end
      - sast
    runs-on: ubuntu-latest
    steps:
      - run: |
          curl -L \
            -X POST \
            -H "Authorization: Bearer ${{ github.token }}"\
            -H "Accept: application/vnd.github+json" \
            https://api.github.com/repos/${{ github.repository }}/actions/workflows/promote.yaml/dispatches \
            -d '{"ref":"main","inputs":{"path":"/service-one","image-name":"service-one"}}'
      - run: echo "Notifying monitoring system..."
        env:
          MONITORING_API_URL: ${{ secrets.MONITORING_API_URL }}
          MONITORING_API_KEY: ${{ secrets.MONITORING_API_KEY }}
        run: |
          curl -X POST $MONITORING_API_URL \
            -H "Authorization: Bearer $MONITORING_API_KEY" \
            -H "Content-Type: application/json" \
            -d '{
              "status": "success",
              "job": "promote",
              "message": "Promotion to production triggered"
            }'

  destroy-infra:
    needs: end-2-end
    runs-on: ubuntu-latest
    steps:
      - run: echo "‚öôÔ∏è Destroying testing infrastructure for Application One."
      - run: echo "Notifying monitoring system..."
        env:
          MONITORING_API_URL: ${{ secrets.MONITORING_API_URL }}
          MONITORING_API_KEY: ${{ secrets.MONITORING_API_KEY }}
        run: |
          curl -X POST $MONITORING_API_URL \
            -H "Authorization: Bearer $MONITORING_API_KEY" \
            -H "Content-Type: application/json" \
            -d '{
              "status": "success",
              "job": "destroy-infra",
              "message": "Testing infrastructure destroyed"
            }'

  trigger-dependencies:
    needs: promote
    runs-on: ubuntu-latest
    steps:
      - run: |
          curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.PAT }}"\
            https://api.github.com/repos/outofdevops/application-two/actions/workflows/build.yaml/dispatches \
            -d '{"ref":"main","inputs":{"image-name":"service-one"}}'
      - run: echo "Notifying monitoring system..."
        env:
          MONITORING_API_URL: ${{ secrets.MONITORING_API_URL }}
          MONITORING_API_KEY: ${{ secrets.MONITORING_API_KEY }}
        run: |
          curl -X POST $MONITORING_API_URL \
            -H "Authorization: Bearer $MONITORING_API_KEY" \
            -H "Content-Type: application/json" \
            -d '{
              "status": "success",
              "job": "trigger-dependencies",
              "message": "Triggered dependency workflow for Application Two"
            }'
